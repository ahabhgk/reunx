(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :
  (global = global || self, factory(global.reunx = {}, global.react));
}(this, (function (exports, react) { 'use strict';

  const createX = (useHook, ...initialArgs) => {
    const Context = react.createContext(null);

    const Provider = ({ children }) => {
      const value = useHook(...initialArgs);

      return react.createElement(
        Context.Provider,
        { value },
        children,
      )
    };

    return { Provider, Context }
  };

  const useX = (x) => react.useContext(x.Context);

  const combineX = (...xs) => xs.reduce(
    (Acc, Cur) => ({ children }) => react.createElement(
      Acc.Provider,
      null,
      react.createElement(Cur.Provider, null, children)
    ),
  );

  exports.combineX = combineX;
  exports.createX = createX;
  exports.useX = useX;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
