(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :
  (global = global || self, factory(global.reunx = {}, global.react));
}(this, (function (exports, react) { 'use strict';

  var createX = function createX(useHook, initialState) {
    var Context = react.createContext(null);

    var Provider = function Provider(_ref) {
      var children = _ref.children;
      var value = useHook(initialState);
      return react.createElement(Context.Provider, {
        value: value
      }, children);
    };

    return {
      Provider: Provider,
      Context: Context
    };
  };

  var useX = function useX(x) {
    return react.useContext(x.Context);
  };

  var combineX = function combineX() {
    for (var _len = arguments.length, xs = new Array(_len), _key = 0; _key < _len; _key++) {
      xs[_key] = arguments[_key];
    }

    return xs.reduce(function (Acc, Cur) {
      return function (_ref2) {
        var children = _ref2.children;
        return react.createElement(Cur.Provider, null, react.createElement(Acc.Provider, null, children));
      };
    });
  };

  exports.combineX = combineX;
  exports.createX = createX;
  exports.useX = useX;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
